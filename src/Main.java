import Obstacle.Obstacle;
import Obstacle.RunningRoad;
import Obstacle.Wall;
import participant.Cat;
import participant.Human;
import participant.Participant;
import participant.Robot;


/**
 1. Разобраться с имеющимся кодом (из урока)
 2. Создайте три класса Человек, Кот, Робот, которые не наследуются от одного класса.
 Эти классы должны уметь бегать и прыгать (методы просто выводят информацию о действии в консоль).
 3. Создайте два класса: беговая дорожка и стена, при прохождении через которые,
 участники должны выполнять соответствующие действия (бежать или прыгать),
 результат выполнения печатаем в консоль (успешно пробежал, не смог пробежать и т.д.).
 4. Создайте два массива: с участниками и препятствиями,
 и заставьте всех участников пройти этот набор препятствий.
 5. У препятствий есть длина (для дорожки) или высота (для стены),
 а участников ограничения на бег и прыжки.
 Если участник не смог пройти одно из препятствий, то дальше по списку он препятствий не идет.
 6. * Добавить класс Team, который будет содержать: название команды, массив из 4-х участников
 (т.е. в конструкторе можно сразу всех участников указывать),
 метод для вывода информации о членах команды прошедших дистанцию,
 метод вывода информации обо всех членах команды.
 7. * Добавить класс Course (полоса препятствий),
 в котором будут находиться: массив препятствий, метод который будет просить команду пройти всю полосу;
 То есть в итоге должно быть:

 public static void main(String[] args) {
 Course c = new Course(...); // Создаем полосу препятствий
 Team team = new Team(...); // Создаем команду
 c.doIt(team); // Просим команду пройти полосу
 team.showResults(); // Показываем результаты
 }
 *  */


public class Main {


    public static void main(String[] args) {
        Participant[] participants = {
                new Human(100,7),
                new Cat(150,10),
                new Robot(10,2)
        };
        Obstacle[] obstacles = {
                new RunningRoad(150),
                new Wall(5)
        };

        for (int i = 0; i < participants.length; i++) {
            for (int j = 0; j < obstacles.length; j++) {
                System.out.println(obstacles[j].doItNow(participants[i]));

            }

        }



    }
}
